<?xml version="1.0" encoding="GBK"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
    <bean id="baseEvent" class="com.pengfei.spring.springevent.Service.BaseEvent" primary="true">
        <constructor-arg value="test"/>
        <constructor-arg value="hello,this is a base event message"/>
    </bean>

    <bean id="broadcastEvent" class="com.pengfei.spring.springevent.Event.BroadcastEvent" >
        <constructor-arg value="test"/>
        <constructor-arg value="hey,this is a broadcast message"/>
        <property name="broadcastType" ref="notice"/>
        <constructor-arg>
            <bean class="java.util.Date"/>
        </constructor-arg>
    </bean>
    <!--<bean id="broadcastEvent" class="com.pengfei.spring.springevent.Event.BroadcastEvent" factory-method="">-->
        <!--<property name="event_type" ref="broadcast_Type"/>-->
        <!--<property name="message" value="hey,this is a broadcast message"/>-->
        <!--<property name="broadcastType" ref="notice"/>-->
        <!--<property name="time">-->
            <!--<bean class="java.util.Date"/>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="broadcast_Type" class="com.pengfei.spring.springevent.Event.EventEnum" factory-method="valueOf">
        <constructor-arg index="0" value="com.pengfei.spring.springevent.Event.EventEnum"/>
        <constructor-arg index="1" value="BROADCAST_TYPE"/>
    </bean>
    <!--这里将enum注册为bean采取了枚举类的valueOf()方法！-->
    <bean id="notice" class="com.pengfei.spring.springevent.Event.BroadcastEnum" factory-method="valueOf">
        <constructor-arg index="0" value="com.pengfei.spring.springevent.Event.BroadcastEnum"/>
        <constructor-arg index="1" value="NOTICE"/>
    </bean>
</beans>